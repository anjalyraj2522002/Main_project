<style>
    .ck-editor__editable_inline {
    min-height: 325px;
 }
</style>
<div class="page-content-wrapper main-content">
    <div class="container-md">
        <div style="margin-top:100px">
    <h4 class="mb-3">Add Your Complaint</h4>
    </div>

<form action="/add-complaint" enctype="multipart/form-data" id="complaint-form" method="POST">
    <input type="hidden" name="date" id="datetime">
    {{#if user}}
    <input type="hidden" value="{{user._id}}" name="applicantId">
    <input type="hidden" value="{{user.Fname}} {{user.Lname}}" name="applicantName">
    <input type="hidden" value="{{user.Phone}}" name="applicantPhone">
    <input type="hidden" value="{{user.Email}}" name="applicantEmail">
    <input type="hidden" value="{{user.Pincode}}" name="applicantPincode">

    {{/if}}
    
    <div class="row">
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    <div class="form-group">
                        <label class="form-label" for="subject">Subject (Short Description)</label>
                        <input class="form-control" id="subject" name="subject" type="text" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label" for="desc">Description</label>
                        <textarea class="form-control" id="editor" name="desc" rows="4" required></textarea>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    <div class="form-group">
                        <label class="form-label" for="department">Department Concerned</label>
                        <select class="form-select" id="department" name="department" required>
                            <option selected>Select Department</option>
                            <option value="Revenue">Revenue</option>
                            <option value="Civil Supplies">Civil Supplies</option>
                            <option value="Local Self/Panchayat">Local Self/Panchayat</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="category">Complaint Category</label>
                        <select class="form-select" id="category" name="category" required>
                            <option selected>Select Type</option>
                            <option value="payment">Payment Issues</option>
                            <option value="rejection">Application Rejection</option>
                            <option value="delayed">Delayed Processing</option>
                            <option value="incorrect">Incorrect Information</option>
                            <option value="technical">Technical Issues</option>
                            <option value="other">Other Issues</option>
                        </select>
                    </div>

                    <div class="d-flex gap-2">
                        <div class="form-group w-100">
                            <label class="form-label" for="Locality">Grievance Locality</label>
                            <input class="form-control" id="locality" name="locality" type="text" required>
                        </div>

                        <div class="form-group w-100">
                            <label class="form-label" for="office_address">Grievance Site Address</label>
                            <textarea class="form-control" id="office_address" name="office_address" rows="4"></textarea>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Attachments</label>
                        <div id="attachmentContainer">
                            <div class="attachment-input">
                                <select name="attachmentType[]" class="form-select attachment-type">
                                    <option value="image">Image (PNG)</option>
                                    <option value="video">Video (MP4)</option>
                                    <option value="pdf">PDF</option>
                                </select>
                                <input type="file" name="attachments[]" class="form-control" accept="image/png,video/mp4,application/pdf">
                            </div>
                        </div>
                        <button type="button" class="btn btn-secondary mt-2" id="addAttachment">Add More</button>
                    </div>
                </div>
            </div>
            <button type="button" class="btn btn-dark mt-4" onclick="validateAndSubmit()">File Complaint</button>
        </div>
    </div>
</form>
    </div>
</div>

<script>
    // Get current date and time
    const now = new Date();
    const year = now.getFullYear();
    const month = (now.getMonth() + 1).toString().padStart(2, '0');
    const day = now.getDate().toString().padStart(2, '0');
    const hours = ((now.getHours() + 11) % 12 + 1).toString().padStart(2, '0'); // Convert to 12-hour format
    const minutes = now.getMinutes().toString().padStart(2, '0');
    const ampm = now.getHours() >= 12 ? 'PM' : 'AM';

    // Set default value to current date and time in 12-hour format with AM/PM
    const defaultDateTime = `${year}-${month}-${day}T${hours}:${minutes}`;
    document.getElementById('datetime').value = defaultDateTime;
</script>

<script>
    ClassicEditor
        .create(document.querySelector('#editor'))
        .catch(error => {
            console.error(error);
        });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let attachmentCount = 1;
        const maxAttachments = 4;
        const attachmentContainer = document.getElementById("attachmentContainer");
        const addAttachmentBtn = document.getElementById("addAttachment");
        const form = document.getElementById("complaint-form");

        // Add attachment functionality
        addAttachmentBtn.addEventListener("click", function () {
            if (attachmentCount < maxAttachments) {
                attachmentCount++;

                const newAttachmentDiv = document.createElement("div");
                newAttachmentDiv.classList.add("attachment-input");
                newAttachmentDiv.innerHTML = `
                    <select name="attachmentType[]" class="form-select attachment-type">
                        <option value="image">Image (PNG)</option>
                        <option value="video">Video (MP4)</option>
                        <option value="pdf">PDF</option>
                    </select>
                    <input type="file" name="attachments[]" class="form-control" accept="image/png,video/mp4,application/pdf">
                    <button type="button" class="btn btn-danger remove-attachment">X</button>
                `;

                attachmentContainer.appendChild(newAttachmentDiv);

                newAttachmentDiv.querySelector(".remove-attachment").addEventListener("click", function () {
                    attachmentContainer.removeChild(newAttachmentDiv);
                    attachmentCount--;
                });
            }
        });

        // Submit button click event
        
    });
</script>
<script>
    function validateAndSubmit() {
        let isValid = true;
        let errorMessage = "";

        const subject = document.getElementById("subject").value.trim();
        const description = document.querySelector(".ck-content").innerText.trim();
        const department = document.getElementById("department").value;
        const category = document.getElementById("category").value;
        const locality = document.getElementById("locality").value.trim();
        const officeAddress = document.getElementById("office_address").value.trim();

        if (!subject) {
            isValid = false;
            errorMessage += "❌ Subject is required.\n";
        }
        if (!description) {
            isValid = false;
            errorMessage += "❌ Description is required.\n";
        }
        if (department === "Select Department") {
            isValid = false;
            errorMessage += "❌ Please select a department.\n";
        }
        if (category === "Select Type") {
            isValid = false;
            errorMessage += "❌ Please select a complaint category.\n";
        }
        if (!locality) {
            isValid = false;
            errorMessage += "❌ Grievance Locality is required.\n";
        }
        if (!officeAddress) {
            isValid = false;
            errorMessage += "❌ Grievance Site Address is required.\n";
        }

        if (!isValid) {
            alert(errorMessage); // Show validation errors
        } else {
            //console.log(locality)
            document.getElementById("complaint-form").submit(); // Submit form if validation passes
        }
    }
</script>
